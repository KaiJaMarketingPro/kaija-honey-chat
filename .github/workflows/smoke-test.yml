name: üö® Smoke-Test mit E-Mail Alert via Make

on:
  schedule:
    - cron: '14 6 * * *'  # t√§glich um 06:14 CET
  workflow_dispatch:

jobs:
  check:
    runs-on: ubuntu-latest
    name: üîç /test + /chat.js pr√ºfen + E-Mail bei Fehler

    steps:
      - name: üß™ Smoke-Test /test
        id: test
        run: |
          STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://gpt.kaija-marketing.pro/test)
          echo "HTTP_STATUS=$STATUS" >> $GITHUB_ENV
          if [ "$STATUS" -ne 200 ]; then
            echo "‚ùå Fehler bei /test ‚Äì Status $STATUS"
            exit 1
          else
            echo "‚úÖ /test OK (200)"
          fi

      - name: üß™ Smoke-Test /api/chat.js
        id: gptproxy
        run: |
          STATUS_CHAT=$(curl -s -o /dev/null -w "%{http_code}" https://gpt.kaija-marketing.pro/api/chat.js \
            -H "Content-Type: application/json" \
            -d '{
              "gpt": "honey-gpt",
              "user": "smoke-test@kaija.pro",
              "optin": true,
              "log": false,
              "messages": [
                {
                  "role": "user",
                  "content": "Was ist mein Signature Angebot?"
                }
              ]
            }')
          echo "HTTP_STATUS_CHAT=$STATUS_CHAT" >> $GITHUB_ENV
          if [ "$STATUS_CHAT" -ne 200 ]; then
            echo "‚ùå Fehler bei /api/chat.js ‚Äì Status $STATUS_CHAT"
            exit 1
          else
            echo "‚úÖ /api/chat.js OK (200)"
          fi

      - name: üìß Sende Nur-Text-E-Mail via Make Webhook
        if: failure()
        run: |
          curl -X POST https://hook.eu2.make.com/YOUR-MAKE-WEBHOOK-ID \
          -H "Content-Type: application/json" \
          -d '{
                "status_test": "'${{ env.HTTP_STATUS }}'",
                "status_chat": "'${{ env.HTTP_STATUS_CHAT }}'",
                "timestamp": "'$(date -Iseconds)'",
                "source": "GitHub Smoke Test",
                "message": "üö® Honey GPT Smoke-Test-Alarm\n\n/test Status: '${{ env.HTTP_STATUS }}'\n/api/chat.js Status: '${{ env.HTTP_STATUS_CHAT }}'\nZeit: '$(date -Iseconds)'\nQuelle: GitHub Workflow\n\nBitte pr√ºfen:\n‚Ä¢ GPT Proxy (chat.js)\n‚Ä¢ DSGVO/Opt-in Fehler\n‚Ä¢ Vercel-Deployment\n\n--\nKaiJa Monitoring System"
              }'
